
<%- partial('_partial/plugins/analytics.ejs') %>
<%- partial('_partial/page-scripts.ejs') %>

<% if (theme.post.fancybox.enable && (is_page() || is_post())){ %>
    <script>
    setTimeout(() => {
        $(".markdown-body img").addClass("ImageBox");
        $(function(){$(".ImageBox").click(function(){$("body").append('<div class="image-box-plugin"><img src="'+$(this).attr("src")+'"></div>');var imgW=$(this).width(),imgH=$(this).height(),scrW=document.body.clientWidth,scrH=window.screen.availHeight;var newW=$(this).width(),newH=$(this).height(),scale=imgW/imgH;if(imgW>scrW){newW=scrW;newH=newW/scale;console.log(newH);console.log(scrH);$(".image-box-plugin img").css({"height":""});$(".image-box-plugin img").css({"width":newW});if(newH>scrH){newH=scrH;newW=newH*scale;$(".image-box-plugin img").css({"width":""});$(".image-box-plugin img").css({"height":newH})}}else{if(imgH>scrH){newH=scrH;newW=newH*scale;$(".image-box-plugin img").css({"width":""});$(".image-box-plugin img").css({"height":newH});if(newW>scrW){newW=scrW;newH=newW/scale;$(".image-box-plugin img").css({"height":""});$(".image-box-plugin img").css({"width":newW})}}}$(".image-box-plugin").fadeIn(500,function(){$(".image-box-plugin").css({"display":"table"})});$(".image-box-plugin").bind("click",function(){$(this).fadeOut(500,function(){$(this).remove()})})})});
    },0);
    </script>
<% } %>

<% if (theme.post.lazyload.enable && (is_page() || is_post())){ %>
    <script>
'use strict'
function query(selector) {
    return Array.from(document.querySelectorAll(selector));
}
    
var io = new IntersectionObserver(function (entries) {
    entries.forEach(function (entry) {
        if (entry.isIntersecting) { 
            var img = entry.target;
            img.srcset = img.getAttribute('data-srcset');
            img.className += ' loaded'
            io.unobserve(img);
        }
    });
});
    
query('.lazyload-img').forEach(function (item) {
    io.observe(item);
});
    </script>
<% } %>
<% if (theme.post.code.highlight && (is_page() || is_post())){ %>
    <script>
        var script = document.createElement('script');
        script.src = "<%- theme.static_prefix.hljs %>hljs.js";
        document.head.appendChild(script);
    </script>
<% } %>
<% if (is_post() && theme.post.toc.enable && page.toc !== false){ %>
    <script>
        $(".toc-btn").click(function(){
            if ($('.post-toc').html()){
                $(".post-toc").toggleClass("display-inline");
            }else{
                alert("<%- theme.post.toc.nothing %>");
            }
        });
    </script>
<% } %>
<% if (is_post() && theme.post.toc.enable && theme.post.toc.type == "tocbot" && page.toc !== false) { %>
    <script src="<%- theme.static_prefix.tocbot %>tocbot.min.js"></script>
    <script>
        window.tocbot.init({
            // Where to render the table of contents.
            tocSelector: '.post-toc',
            // Where to grab the headings to build the table of contents.
            contentSelector: '#post-content',
            // Which headings to grab inside of the contentSelector element.
            headingSelector: '<%- theme.post.toc.tocbot.headingSelector %>' || 'h1, h2, h3, h4, h5, h6',
            // For headings inside relative or absolute positioned containers within content.
            hasInnerContainers: true,
            linkClass: 'tocbot-link',
            activeLinkClass: 'tocbot-active-link',
            listClass: 'tocbot-list',
            isCollapsedClass: 'tocbot-is-collapsed',
            collapsibleClass: 'tocbot-is-collapsible',
            collapseDepth: <%- theme.post.toc.tocbot.collapseDepth %> || 0,
            scrollSmooth    : true
        });
    </script>
<% } %>

<%- partial('_partial/plugins/mermaid.ejs') %>
<% if (theme.global.web_analytics.busuanzi.enable || theme.post.views.enable){ %>
    <script>
        setTimeout(() => {
            loadScript("<%- theme.static_prefix.busuanzi %>busuanzi.pure.mini.js")
        },0);
    </script>
<% } %>
