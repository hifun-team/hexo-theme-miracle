
<%- partial('_partial/plugins/analytics.ejs') %>
<%- partial('_partial/page-scripts.ejs') %>

<% if (theme.post.fancybox.enable && (is_page() || is_post())){ %>
    <script>
    setTimeout(() => {
        loadScript("<%- theme.static_prefix.fancybox %>jquery.fancybox.min.js")
        let fancyTimer=setInterval((function(){window.$&&$(document).ready((function(){$(".markdown-body img").each((function(){if("a"!==$(this).parent().get(0).tagName.toLowerCase()){var t=document.createElement("a");$(t).attr("data-fancybox","gallery"),$(t).attr("style","text-decoration: none; outline: none; border: 0px none transparent;"),$(this).attr("data-original")?$(t).attr("href",$(this).attr("data-original")):$(t).attr("href",$(this).attr("src")),$(this).wrap(t)}})),clearInterval(fancyTimer)}))}),10);
    },0);
    </script>
<% } %>

<% if (theme.post.lazyload.enable && (is_page() || is_post())){ %>
    <script>
        'use strict'
function query(selector) {
    return Array.from(document.querySelectorAll(selector));
}
    
var io = new IntersectionObserver(function (entries) {
    entries.forEach(function (entry) {
        if (entry.isIntersecting) {
            var img = entry.target;
            img.srcset = img.getAttribute('data-srcset');
            img.className += ' loaded'
            io.unobserve(img);
        }
    });
});
    
query('.lazyload-img').forEach(function (item) {
    io.observe(item);
});
    </script>
<% } %>
<% if (theme.post.code.highlight && (is_page() || is_post())){ %>
    <script>
        var script = document.createElement('script');
        script.src = "<%- theme.static_prefix.hljs %>hljs.js";
        document.head.appendChild(script);
    </script>
<% } %>
<% if (is_post() && theme.post.toc.enable && page.toc !== false){ %>
    <script>
        $(".toc-btn").click(function(){
            if ($('.post-toc').html()){
                $(".post-toc").toggleClass("display-inline");
            }else{
                alert("<%- theme.post.toc.nothing %>");
            }
        });
    </script>
<% } %>
<% if (is_post() && theme.post.toc.enable && theme.post.toc.type == "tocbot" && page.toc !== false) { %>
    <script src="<%- theme.static_prefix.tocbot %>tocbot.min.js"></script>
    <script>
        window.tocbot.init({
            // Where to render the table of contents.
            tocSelector: '.post-toc',
            // Where to grab the headings to build the table of contents.
            contentSelector: '#post-content',
            // Which headings to grab inside of the contentSelector element.
            headingSelector: '<%- theme.post.toc.tocbot.headingSelector %>' || 'h1, h2, h3, h4, h5, h6',
            // For headings inside relative or absolute positioned containers within content.
            hasInnerContainers: true,
            linkClass: 'tocbot-link',
            activeLinkClass: 'tocbot-active-link',
            listClass: 'tocbot-list',
            isCollapsedClass: 'tocbot-is-collapsed',
            collapsibleClass: 'tocbot-is-collapsible',
            collapseDepth: <%- theme.post.toc.tocbot.collapseDepth %> || 0,
            scrollSmooth    : true
        });
    </script>
<% } %>

<%- partial('_partial/plugins/mermaid.ejs') %>
<% if (theme.global.web_analytics.busuanzi.enable || theme.post.views.enable){ %>
    <script src="<%- theme.static_prefix.busuanzi %>busuanzi.pure.mini.js" async></script>
<% } %>
